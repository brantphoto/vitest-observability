name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Create automatic changeset if none exist
        run: |
          if [ ! "$(ls -A .changeset/*.md 2>/dev/null | grep -v README)" ]; then
            echo "---" > .changeset/auto-release.md
            echo "\"@vitest-observability/plugin\": patch" >> .changeset/auto-release.md
            echo "\"@vitest-observability/reporter\": patch" >> .changeset/auto-release.md
            echo "\"@vitest-observability/types\": patch" >> .changeset/auto-release.md
            echo "---" >> .changeset/auto-release.md
            echo "" >> .changeset/auto-release.md
            echo "Auto-release: patch version bump" >> .changeset/auto-release.md
          fi

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pnpm release
          title: "Release: Version Packages"
          commit: "chore: release packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}